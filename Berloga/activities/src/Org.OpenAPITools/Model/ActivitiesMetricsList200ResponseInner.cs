/*
 * Активности Берлоги
 *
 * Сервис активностей и артефактов игр Берлоги.  ## v0.5  - Добавлены административные операции импорта и чтения списка контекстов.  ## v0.4  - Добавлен [эндпоинт чтения списка активностей с метриками](#operation/ActivitiesMetricsList).  ## v0.3 - Добавлен [метод чтения баллов сгруппированных по традициям](#operation/ActivitiesScoresByTraditions). - Добавлен [эндпоинт чтения активности по ее ID](#operation/ActivityRead). - Добавлен [эндпоинт чтения ID традиции контекста](#operation/ContextTraditionID).  ## v0.2 [Для передачи активности](#operation/ActivitiesCreate) теперь обязательно нужно указывать версию приложения.
 *
 * The version of the OpenAPI document: 0.5
 * Contact: talent@kruzhok.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ActivitiesMetricsList200ResponseInner
    /// </summary>
    [DataContract(Name = "ActivitiesMetricsList_200_response_inner")]
    public partial class ActivitiesMetricsList200ResponseInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivitiesMetricsList200ResponseInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ActivitiesMetricsList200ResponseInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivitiesMetricsList200ResponseInner" /> class.
        /// </summary>
        /// <param name="activityId">Идентификатор активности. (required).</param>
        /// <param name="createdAt">Дата записи активности. (required).</param>
        /// <param name="playerId">Идентификатор игрока. (required).</param>
        /// <param name="appVersion">Версия приложения, в которой была произведена активность. (required).</param>
        /// <param name="contextId">Идентификатор контекста активности. (required).</param>
        /// <param name="contextDescription">Описание контекста (required).</param>
        /// <param name="artefactId">artefactId (required).</param>
        /// <param name="metrics">Метрики активности. (required).</param>
        public ActivitiesMetricsList200ResponseInner(Guid activityId = default(Guid), DateTime createdAt = default(DateTime), Guid playerId = default(Guid), string appVersion = default(string), Guid contextId = default(Guid), string contextDescription = default(string), Guid artefactId = default(Guid), Dictionary<string, decimal> metrics = default(Dictionary<string, decimal>))
        {
            this.ActivityId = activityId;
            this.CreatedAt = createdAt;
            this.PlayerId = playerId;
            // to ensure "appVersion" is required (not null)
            if (appVersion == null)
            {
                throw new ArgumentNullException("appVersion is a required property for ActivitiesMetricsList200ResponseInner and cannot be null");
            }
            this.AppVersion = appVersion;
            this.ContextId = contextId;
            // to ensure "contextDescription" is required (not null)
            if (contextDescription == null)
            {
                throw new ArgumentNullException("contextDescription is a required property for ActivitiesMetricsList200ResponseInner and cannot be null");
            }
            this.ContextDescription = contextDescription;
            this.ArtefactId = artefactId;
            // to ensure "metrics" is required (not null)
            if (metrics == null)
            {
                throw new ArgumentNullException("metrics is a required property for ActivitiesMetricsList200ResponseInner and cannot be null");
            }
            this.Metrics = metrics;
        }

        /// <summary>
        /// Идентификатор активности.
        /// </summary>
        /// <value>Идентификатор активности.</value>
        [DataMember(Name = "activity_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid ActivityId { get; set; }

        /// <summary>
        /// Дата записи активности.
        /// </summary>
        /// <value>Дата записи активности.</value>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Идентификатор игрока.
        /// </summary>
        /// <value>Идентификатор игрока.</value>
        [DataMember(Name = "player_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid PlayerId { get; set; }

        /// <summary>
        /// Версия приложения, в которой была произведена активность.
        /// </summary>
        /// <value>Версия приложения, в которой была произведена активность.</value>
        [DataMember(Name = "app_version", IsRequired = true, EmitDefaultValue = true)]
        public string AppVersion { get; set; }

        /// <summary>
        /// Идентификатор контекста активности.
        /// </summary>
        /// <value>Идентификатор контекста активности.</value>
        [DataMember(Name = "context_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid ContextId { get; set; }

        /// <summary>
        /// Описание контекста
        /// </summary>
        /// <value>Описание контекста</value>
        [DataMember(Name = "context_description", IsRequired = true, EmitDefaultValue = true)]
        public string ContextDescription { get; set; }

        /// <summary>
        /// Gets or Sets ArtefactId
        /// </summary>
        [DataMember(Name = "artefact_id", IsRequired = true, EmitDefaultValue = true)]
        public Guid ArtefactId { get; set; }

        /// <summary>
        /// Метрики активности.
        /// </summary>
        /// <value>Метрики активности.</value>
        [DataMember(Name = "metrics", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, decimal> Metrics { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivitiesMetricsList200ResponseInner {\n");
            sb.Append("  ActivityId: ").Append(ActivityId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  PlayerId: ").Append(PlayerId).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  ContextId: ").Append(ContextId).Append("\n");
            sb.Append("  ContextDescription: ").Append(ContextDescription).Append("\n");
            sb.Append("  ArtefactId: ").Append(ArtefactId).Append("\n");
            sb.Append("  Metrics: ").Append(Metrics).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
