/*
 * Игровые сохранения
 *
 * Игровые сохранения пишутся пользователями Таланта для игр Берлоги. Записанные в них игровые данные могут быть двух типов: JSON объект либо данные произвольной формы. Тип сохранений зависит от игры. Структура JSON объекта определяется игрой.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: talent@kruzhok.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DoneApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DoneApiTests : IDisposable
    {
        private DoneApi instance;

        public DoneApiTests()
        {
            instance = new DoneApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DoneApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DoneApi
            //Assert.IsType<DoneApi>(instance);
        }

        /// <summary>
        /// Test GamesaveLatestDelete
        /// </summary>
        [Fact]
        public void GamesaveLatestDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GamesaveLatestDelete();
        }

        /// <summary>
        /// Test GamesaveLatestGamedata
        /// </summary>
        [Fact]
        public void GamesaveLatestGamedataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GamesaveLatestGamedata();
            //Assert.IsType<Dictionary<string, Object>>(response);
        }

        /// <summary>
        /// Test GamesaveLatestMetadata
        /// </summary>
        [Fact]
        public void GamesaveLatestMetadataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GamesaveLatestMetadata();
            //Assert.IsType<GamesaveMeta>(response);
        }
    }
}
