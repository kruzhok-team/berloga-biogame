/*
 * Провайдер учетных данных Берлоги
 *
 * Провайдер учетных данных для мобильных игр Берлоги. Предназначен для использования как мобильными приложениями, так и другими сервисами Берлоги. Для определения какому потребителю предназначена операция, нужно обратить внимание на её тэги.  # Changelog  ### 0.4 Для [TalentOAuthConnect](#operation/TalentOAuthConnect) добавлен опциональный параметр `redirect_uri`.  ### 0.3 Для [TalentUserPlayers](#operation/TalentUserPlayers) добавлена поддержка TalentOAuth.
 *
 * The version of the OpenAPI document: 0.4
 * Contact: talent@kruzhok.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PlayerGet200Response
    /// </summary>
    [DataContract(Name = "PlayerGet_200_response")]
    public partial class PlayerGet200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlayerGet200Response" /> class.
        /// </summary>
        /// <param name="talentId">Возвращается, если передан параметр &#x60;get_talent_id&#x3D;true&#x60;. Если у игрока не имеется привязанной учетной записи Таланта, значением будет &#x60;null&#x60;..</param>
        /// <param name="playerIds">Возвращается, если передан параметр &#x60;get_player_ids&#x3D;true&#x60;..</param>
        public PlayerGet200Response(int talentId = default(int), List<Guid> playerIds = default(List<Guid>))
        {
            this.TalentId = talentId;
            this.PlayerIds = playerIds;
        }

        /// <summary>
        /// Возвращается, если передан параметр &#x60;get_talent_id&#x3D;true&#x60;. Если у игрока не имеется привязанной учетной записи Таланта, значением будет &#x60;null&#x60;.
        /// </summary>
        /// <value>Возвращается, если передан параметр &#x60;get_talent_id&#x3D;true&#x60;. Если у игрока не имеется привязанной учетной записи Таланта, значением будет &#x60;null&#x60;.</value>
        [DataMember(Name = "talent_id", EmitDefaultValue = false)]
        public int TalentId { get; set; }

        /// <summary>
        /// Возвращается, если передан параметр &#x60;get_player_ids&#x3D;true&#x60;.
        /// </summary>
        /// <value>Возвращается, если передан параметр &#x60;get_player_ids&#x3D;true&#x60;.</value>
        [DataMember(Name = "player_ids", EmitDefaultValue = false)]
        public List<Guid> PlayerIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlayerGet200Response {\n");
            sb.Append("  TalentId: ").Append(TalentId).Append("\n");
            sb.Append("  PlayerIds: ").Append(PlayerIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
